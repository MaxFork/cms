cmake_minimum_required(VERSION 3.18)
if(${CMAKE_VERSION} VERSION_LESS 3.18)
cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
else()
cmake_policy(VERSION 3.18)
endif()

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/platforms-toolchain/")

# ------ CROSS-COMPILE CONFIG ------
if(PLATFORM_OS STREQUAL "macOS")
    message(STATUS "Ready for macOS!")
    set(MACOS TRUE)
    include(macos-toolchain)
    if(macos-toolchain)
      return()
    endif()
    set(macos-toolchain ON)
elseif(PLATFORM_OS STREQUAL "iOS")
    message(STATUS "Ready for iOS Device!")
    set(IOS TRUE)
    include(ios-toolchain)
    if(ios-toolchain)
      return()
    endif()
    set(ios-toolchain ON)
elseif(PLATFORM_OS STREQUAL "iOS-Simulator")
    message(STATUS "Ready for iOS Simulator!")
    set(IOS_SIMULATOR TRUE)
    include(ios-toolchain)
    if(ios-toolchain)
      return()
    endif()
    set(ios-toolchain ON)
elseif(PLATFORM_OS STREQUAL "Windows")
    message(STATUS "Ready for Windows!")
    set(WINDOWS TRUE)
    include(windows-toolchain)
    if(windows-toolchain)
      return()
    endif()
    set(windows-toolchain ON)
elseif(PLATFORM_OS STREQUAL "Linux")
    message(STATUS "Ready for Linux!")
    include(linux-toolchain)
    if(linux-toolchain)
      return()
    endif()
    set(linux-toolchain ON)
    set(LINUX TRUE)
elseif(PLATFORM_OS STREQUAL "FreeBSD")
    message(STATUS "Ready for FreeBSD!")
    set(FREEBSD TRUE)
    include(freebsd-toolchain)
    if(freebsd-toolchain)
      return()
    endif()
    set(freebsd-toolchain ON)
elseif(PLATFORM_OS STREQUAL "Android")
    message(STATUS "Ready for Android!")
    set(ANDROID TRUE)
    include(android-toolchain)
    if(android-toolchain)
      return()
    endif()
    set(android-toolchain ON)
else()
    message(STATUS "Ready for Unknown Device! [set PLATFORM_OS variable to specify platform].")
endif()

if(PLATFORM_OS STREQUAL "macOS")
    set(PLATFORM_FOLDER_NAME "macOS")
elseif(PLATFORM_OS STREQUAL "iOS")
    set(PLATFORM_FOLDER_NAME "iOS")
elseif(PLATFORM_OS STREQUAL "iOS-Simulator")
    set(PLATFORM_FOLDER_NAME "iOS-Simulator")
elseif(PLATFORM_OS STREQUAL "FreeBSD")
    set(PLATFORM_FOLDER_NAME "FreeBSD")
elseif(PLATFORM_OS STREQUAL "Windows")
    set(PLATFORM_FOLDER_NAME "Windows")
elseif(PLATFORM_OS STREQUAL "Android")
    set(PLATFORM_FOLDER_NAME "Android")
elseif(PLATFORM_OS STREQUAL "Linux")
    set(PLATFORM_FOLDER_NAME "Linux")
endif()
